@page "/login"
@using EduChat.Services;
@using MySql.Data.MySqlClient;
@inject UserService UserService
@inject MySqlConnection Connection
@inject NavigationManager NavigationManager

<link href="css/loginstyle.css" rel="stylesheet" />
<div class="centered-container">
<div class="login-container">
    <h1>Login</h1>

    <div>
        <label for="email">Email:</label>
        <input type="email" id="email" @bind-value="Email" />
    </div>

    <div>
        <label for="password">Password:</label>
        <input type="password" id="password" @bind-value="Password" />
    </div>

    <button @onclick="LoginUser">Login</button>
</div>
</div>

@code {
    private string Email { get; set; }
    private string Password { get; set; }
    private string UserName { get; set; }
    private async Task LoginUser()
    {
        try
        {
            await Connection.OpenAsync();

            MySqlCommand cmdCount = new MySqlCommand("SELECT COUNT(*) FROM users WHERE email = @email AND password = @password");
            cmdCount.Parameters.AddWithValue("@email", Email);
            cmdCount.Parameters.AddWithValue("@password", Password);
            cmdCount.Connection = Connection;

            int count = Convert.ToInt32(await cmdCount.ExecuteScalarAsync());

            if (count == 1)
            {
                MySqlCommand cmd = new MySqlCommand("SELECT id, name FROM users WHERE email = @email AND password = @password");

                cmd.Parameters.AddWithValue("@email", Email);
                cmd.Parameters.AddWithValue("@password", Password);
                cmd.Connection = Connection;
                MySqlDataReader reader = cmd.ExecuteReader() as MySqlDataReader;

              
                    while (await reader.ReadAsync())
                    {
                        int userId = reader.GetInt32(0);
                        string userName = reader.GetString(1);
                        UserService.UserId = userId;
                        UserService.UserName = userName;
                    }
                
               
                NavigationManager.NavigateTo("/" , forceLoad: true);
            }
            else
            {
                // Display error message
            }
        }
        catch (Exception ex)
        {
            // Handle the exception
        }
        finally
        {
            await Connection.CloseAsync();
        }
    }


}
